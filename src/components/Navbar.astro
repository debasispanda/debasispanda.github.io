---
import "@pagefind/default-ui/css/ui.css";
import Hr from "@/components/Hr.astro";
import {
  GearIcon,
  XIcon,
  SunIcon,
  MoonIcon,
  ListIcon,
  MagnifyingGlassIcon,
  XCircleIcon,
} from "@phosphor-icons/react";
import config from "@/site.config";

const { pathname } = Astro.url;

const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;
const currentPathArray = currentPath.split("/").filter(p => p.trim());

const isActive = (path: string) => {
  const pathArray = path.split("/").filter(p => p.trim());
  return currentPath === path || currentPathArray[0] === pathArray[0];
};
---

<style is:global>
  #pagefind-search {
    --pagefind-ui-font: var(--font-mono);
    --pagefind-ui-text: var(--foreground);
    --pagefind-ui-background: var(--background);
    --pagefind-ui-border: var(--border);
    --pagefind-ui-primary: var(--accent);
    --pagefind-ui-tag: var(--background);
    --pagefind-ui-border-radius: 0.375rem;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-image-border-radius: 8px;
    --pagefind-ui-image-box-ratio: 3 / 2;

    form::before {
      background-color: var(--foreground);
    }

    input {
      font-weight: 400;
      border: 1px solid var(--border);
    }

    input:focus-visible {
      outline: 1px solid var(--accent);
    }

    .pagefind-ui__result-title a {
      color: var(--accent);
      outline-offset: 1px;
      outline-color: var(--accent);
    }

    .pagefind-ui__result-title a:focus-visible,
    .pagefind-ui__search-clear:focus-visible {
      text-decoration-line: none;
      outline-width: 2px;
      outline-style: dashed;
    }

    .pagefind-ui__result:last-of-type {
      border-bottom: 0;
    }

    .pagefind-ui__result-nested .pagefind-ui__result-link:before {
      font-family: system-ui;
    }
  }
</style>
<header>
  <div
    id="nav-container"
    class="max-w-app mx-auto flex flex-col items-center justify-between sm:flex-row"
  >
    <div
      id="top-nav-wrap"
      class="relative flex w-full items-baseline justify-between p-4 sm:items-center sm:py-6"
    >
      <a
        href="/"
        class="absolute whitespace-nowrap py-1 text-xl font-semibold leading-8 sm:static sm:my-auto sm:text-2xl sm:leading-none"
      >
        {config.title}
      </a>
      <nav
        id="nav-menu"
        class="flex w-full flex-col items-center sm:ms-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0"
      >
        <button
          id="menu-btn"
          class="focus-outline self-end p-2 sm:hidden"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <XIcon id="close-icon" className="hidden" />
          <ListIcon id="menu-icon" />
        </button>
        <ul
          id="menu-items"
          class:list={[
            "mt-4 grid w-44 grid-cols-2 place-content-center gap-2",
            "[&>li>a]:hover:text-accent [&>li>a]:block [&>li>a]:px-4 [&>li>a]:py-3 [&>li>a]:text-center [&>li>a]:font-medium sm:[&>li>a]:px-2 sm:[&>li>a]:py-1",
            "hidden",
            "sm:mt-0 sm:flex sm:w-auto sm:gap-x-5 sm:gap-y-0",
          ]}
        >
          {
            config.navLinks.map(({ url, name, icon: Icon }) => (
              <li class="col-span-2">
                <a href={url} class:list={{ "active-nav": isActive(url) }}>
                  {Icon ? <Icon size={24} /> : name}
                </a>
              </li>
            ))
          }
          <li class="relative col-span-1 flex items-center justify-center">
            <button
              type="button"
              class="focus-outline hover:[&>svg]:stroke-accent size-12 sm:size-8"
              aria-keyshortcuts="Control+K Meta+K"
              data-open-modal
            >
              <MagnifyingGlassIcon size={24} />
              <span class="sr-only">Search</span>
            </button>
          </li>
          <li class="relative col-span-1 flex items-center justify-center">
            <button
              type="button"
              class="focus-outline hover:[&>svg]:stroke-accent size-12 sm:size-8"
              data-popover-target="menu"
            >
              <GearIcon size={24} />
              <span class="sr-only">Settings</span>
            </button>
            <ul
              role="menu"
              data-popover="menu"
              class="absolute top-8 z-10 min-w-[150px] overflow-auto rounded-lg border border-slate-200 p-1.5 shadow-sm focus:outline-none"
            >
              <li class="col-span-1 flex items-center justify-between">
                <button
                  id="theme-btn"
                  class="focus-outline hover:[&>svg]:stroke-accent relative size-12 p-4 sm:size-8"
                  title="Toggles light & dark"
                  aria-label="auto"
                  aria-live="polite"
                >
                  <MoonIcon
                    size={24}
                    className="-translate-[50%] absolute left-[50%] top-[50%] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"
                  />
                  <SunIcon
                    size={24}
                    className="-translate-[50%] absolute left-[50%] top-[50%] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"
                  />
                </button>
                <select
                  id="select-font"
                  class="block w-20 rounded-lg border border-gray-300 bg-gray-50 p-2 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                >
                  <option selected value="mono">Mono</option>
                  <option value="serif">Serif</option>
                  <option value="sans">Sans</option>
                </select>
              </li>
            </ul>
          </li>
        </ul>
      </nav>
    </div>
    <Hr />
  </div>
  <dialog
    aria-label="search"
    class="text-foreground! bg-background max-h-5/6 w-7/8 border-double! border-accent/30 mx-auto mb-auto mt-10 min-h-48 max-w-xl rounded-xl border-4 shadow-sm backdrop:backdrop-blur-sm open:flex sm:mt-16 sm:w-5/6"
  >
    <div
      class="dialog-frame relative flex max-w-full grow flex-col gap-4 p-6 pt-6"
    >
      <button class="absolute right-1 top-1 cursor-pointer" data-close-modal>
        <XCircleIcon size={20} />
      </button>
      <div class="search-container">
        <div id="pagefind-search" transition:persist class="max-w-full"></div>
      </div>
    </div>
  </dialog>
</header>
<style is:global>
  :root {
    --pagefind-ui-font: inherit;
    --pagefind-ui-primary: var(--theme-accent);
    --pagefind-ui-text: var(--theme-foreground);
    --pagefind-ui-background: var(--theme-background);
    --pagefind-ui-border: var(--theme-accent);
    --pagefind-ui-border-width: 2px;
  }

  .pagefind-ui__results-area {
    margin: 16px 0;
  }
  .pagefind-ui__result {
    overflow-x: scroll !important;
  }

  .pagefind-ui__result-inner {
    max-width: 100% !important;
  }

  .pagefind-ui__result-inner mark {
    background-color: var(--theme-accent) !important;
    color: var(--theme-background) !important;
    font-weight: 600 !important;
    padding: 0 3px !important;
    border-radius: 6px !important;
  }

  .pagefind-ui__result-nested .pagefind-ui__result-link:before {
    content: ">" !important;
    left: -16px !important;
    right: unset !important;
    color: var(--theme-accent) !important;
    font-weight: 600 !important;
  }
</style>
<script>
  function toggleNav() {
    const menuBtn = document.querySelector("#menu-btn");
    const menuItems = document.querySelector("#menu-items");
    const menuIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");

    if (!menuBtn || !menuItems || !menuIcon || !closeIcon) return;

    menuBtn.addEventListener("click", () => {
      const openMenu = menuBtn.getAttribute("aria-expanded") === "true";

      menuBtn.setAttribute("aria-expanded", openMenu ? "false" : "true");
      menuBtn.setAttribute("aria-label", openMenu ? "Open Menu" : "Close Menu");

      menuItems.classList.toggle("hidden");
      menuIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });
  }

  function toggleDialog() {
    const openDialogBtn = document.querySelector("button[data-open-modal]");
    openDialogBtn?.addEventListener("click", () => {
      document.querySelector("dialog")?.showModal();
    });

    const closeDialogBtn = document.querySelector("button[data-close-modal]");
    closeDialogBtn?.addEventListener("click", () => {
      document.querySelector("dialog")?.close();
    });

    // Hide when clicked on backdrop
    document.body.addEventListener(
      "click",
      e => {
        document.querySelectorAll("dialog").forEach(dialog => {
          if (dialog.querySelector(".dialog-frame")?.contains(e.target as Node))
            return;
          dialog.close();
        });
      },
      true
    );
  }

  function initSearch() {
    const pageFindSearch: HTMLElement | null =
      document.querySelector("#pagefind-search");

    if (!pageFindSearch) return;

    const onIdle = window.requestIdleCallback || (cb => setTimeout(cb, 1));

    onIdle(async () => {
      const { PagefindUI } = await import("@pagefind/default-ui");

      // Show warning in dev mode
      if (import.meta.env.DEV) {
        pageFindSearch.innerHTML = `
            <div class="bg-muted/75 rounded p-4 space-y-4 mb-4">
              <p><strong>DEV mode Warning! </strong>You need to build the project at least once to see the search results during development.</p>
              <code class="block bg-black text-white px-2 py-1 rounded">npm run build</code>
            </div>
          `;
      }

      // Init pagefind ui
      new PagefindUI({
        element: "#pagefind-search",
        showSubResults: true,
        showImages: false,
      });
    });
  }

  function loadScript() {
    toggleNav();
    toggleDialog();

    const pagefindSearch = document.querySelector("#pagefind-search");

    // if pagefind search form already exists, don't initialize search component
    if (pagefindSearch && pagefindSearch.querySelector("form")) return;

    initSearch();
  }

  loadScript();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", loadScript);
</script>
